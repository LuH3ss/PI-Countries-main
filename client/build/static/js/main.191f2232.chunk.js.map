{"version":3,"sources":["redux/actions/actionTypes.js","redux/reducer/index.js","redux/store/index.js","components/home/home.jsx","redux/actions/index.js","components/country/countryCard.jsx","components/paginado/Paginator.jsx","components/SearchBar/searchBar.jsx","components/countries/countries.jsx","components/countryById/countryId.jsx","components/createActivity/createActivity.jsx","components/navbar/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["ALL_COUNTRIES","COUNTRY","initialStates","countries","countriesAux","countryDetail","activities","reducer","state","action","type","payload","filter","country","population","continents","countriesByPop","sort","a","b","countriesSorted","name","allCountries","auxCountries","byAct","find","act","store","createStore","composeWithDevTools","applyMiddleware","thunk","Home","className","to","EP","getAllCountries","dispatch","axios","dataDb","data","CountryCard","props","src","flags","alt","continent","id","Paginator","paginator","nineCountries","tenCountries","pages","i","Math","ceil","push","map","num","value","onClick","SearchBar","useDispatch","useState","setName","onSubmit","e","preventDefault","getName","onChange","target","placeholder","Countries","useSelector","allActivities","page","setPage","useEffect","indexFirstCountry","setIndexFirstCountry","indexLastCountry","setIndexLastCountry","countriesAtPage","slice","length","c","CountryId","useParams","getById","capital","subregion","area","season","duration","difficulty","CreateActivity","errorButton","setErrorButton","formErrors","setFormErrors","input","setInput","handleChange","errors","str","validName","validSeason","validDuration","validDifficulty","validate","Object","keys","post","response","alert","required","style","color","disabled","Navbar","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.191f2232.chunk.js","sourcesContent":["export const ALL_COUNTRIES = 'ALL_COUNTRIES';\r\nexport const COUNTRY = 'COUNTRY'\r\n","import {\r\n    ALL_COUNTRIES,\r\n    COUNTRY\r\n} from \"../actions/actionTypes\"\r\n\r\n\r\nconst initialStates = {\r\n    countries: [],\r\n    countriesAux: [], //este arreglo es una copia del countries original. Está para que en el renderizado, no cuente con un unico arreglo y las acciones no sean permanentes.\r\n    countryDetail: {},\r\n    activities: []\r\n}\r\n\r\nconst reducer = (state = initialStates, action) => {\r\n    switch (action.type) {\r\n        case ALL_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                countries: action.payload, //la dataDb\r\n                    countriesAux: action.payload\r\n            }\r\n            case 'BY_MORE_POP': \r\n            return {\r\n                ...state,\r\n                countries: state.countriesAux.filter(country => {\r\n                    return country.population > 1000000\r\n                })\r\n            }\r\n            case 'BY_CONTINENT':\r\n                return {\r\n                    ...state,\r\n\r\n                    countries:\r\n                        action.payload === 'Todos' ?\r\n                        state.countriesAux :\r\n                        state.countriesAux.filter((country) => {\r\n                            return country.continents === action.payload //continent\r\n                        })\r\n                }\r\n                case 'BY_POPULATION':\r\n                    let countriesByPop = [...state.countriesAux].sort((a, b) => {\r\n                        if (action.payload === 'less_population') {\r\n                            if (a.population > b.population) {\r\n                                return 1;\r\n                            }\r\n                            if (a.population < b.population) {\r\n                                return -1;\r\n                            }\r\n\r\n                            return 0;\r\n                        };\r\n                        if (action.payload === 'more_population') {\r\n                            if (a.population < b.population) {\r\n                                return 1;\r\n                            }\r\n                            if (a.population > b.population) {\r\n                                return -1;\r\n                            }\r\n                            return 0;\r\n                        }\r\n                        return 0\r\n                    })\r\n\r\n                    return {\r\n                        ...state,\r\n                        countries:\r\n                            action.payload === 'Todos' ?\r\n                            state.countriesAux :\r\n                            countriesByPop\r\n\r\n                    }\r\n                    case 'SORTED':\r\n                        let countriesSorted = [...state.countriesAux].sort((a, b) => {\r\n                            if (action.payload === 'ascendente') {\r\n                                if (a.name > b.name) {\r\n                                    return 1;\r\n                                }\r\n                                if (a.name < b.name) {\r\n                                    return -1;\r\n                                }\r\n\r\n                                return 0;\r\n                            };\r\n                            if (action.payload === 'descendente') {\r\n                                if (a.name < b.name) {\r\n                                    return 1;\r\n                                }\r\n                                if (a.name > b.name) {\r\n                                    return -1;\r\n                                }\r\n                                return 0;\r\n                            }\r\n                            return 0\r\n                        })\r\n                        return {\r\n                            ...state,\r\n                            countries: state.countries = countriesSorted,\r\n                                countriesAux: state.countriesAux = countriesSorted\r\n                        }\r\n                        case COUNTRY:\r\n                            return {\r\n                                ...state,\r\n                                countryDetail: action.payload\r\n                            }\r\n                            case 'CLEAN':\r\n                                return {\r\n                                    ...state,\r\n                                    countryDetail: action.payload\r\n                                }\r\n                                case 'COUNTRY_NAME':\r\n                                    return {\r\n                                        ...state,\r\n                                        countries: action.payload,\r\n                                            countriesAux: action.payload\r\n                                    }\r\n                                    case 'POST_ACTIVITY':\r\n                                        return {\r\n                                            ...state\r\n                                        }\r\n                                        case 'ALL_ACTIVITIES':\r\n                                            return {\r\n                                                ...state,\r\n                                                activities: action.payload\r\n                                            }\r\n                                            case 'BY_ACTIVITY':\r\n                                                const allCountries =[ ...state.countriesAux];\r\n                                                const auxCountries =[...state.countriesAux];\r\n                                                const byAct = action.payload === 'Todos' ? auxCountries : allCountries.filter(country => country.activities?.find(act => act.name === action.payload))\r\n                                                return {\r\n                                                    ...state,\r\n                                                    countries: byAct,\r\n                                                    countriesAux: allCountries \r\n                                                }\r\n                                                default:\r\n                                                    return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default reducer","import { createStore, applyMiddleware } from \"redux\";\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"../reducer\";\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk))) //con esto inicialice el store tras crear reducer tambien\r\n/**\r\n * El store reducer un reducer y un middleware. En este caso es thunk, que lo que hace dar la posiblidad de trabajr de manera asincrona entre las peticiones ala db/api y las acciones que vienen de ellas. Permite que el store pueda recibir asyncs\r\n */\r\n\r\nexport default store","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './home.css'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container_intro'>\r\n            <h1>Hola!</h1>\r\n            <h3>Click en el boton para ingresar 😉</h3>\r\n            <Link to=\"/countries\">\r\n                <button >Paises</button>\r\n            </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Home","import { ALL_COUNTRIES, COUNTRY } from \"./actionTypes\";\r\nimport axios from 'axios'\r\n//primero invocamos a la url a la cual le haremos las peticiones\r\n\r\nconst EP = 'http://localhost:3001' \r\n\r\nexport function getAllCountries () {\r\n    return async (dispatch) => { //dispatch, quien pide al store hacer tal cosa\r\n        const dataDb = await axios(`${EP}/countries`);//axios retorna un {} con una prop data, y ahi es donde tango la info que neecesito\r\n        return dispatch ({\r\n            type: ALL_COUNTRIES,\r\n            payload: dataDb.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport function getById (id) {\r\n    return async (dispatch) => {\r\n        const dataDb = await axios(`${EP}/countries/${id}`);\r\n        return dispatch({\r\n            type: COUNTRY,\r\n            payload: dataDb.data\r\n        })\r\n    }\r\n}\r\n\r\nexport function getByContinent (continent) {\r\n    return {\r\n        type: 'BY_CONTINENT',\r\n        payload: continent\r\n    }\r\n}\r\n\r\nexport function getByPopulation (population) {\r\n    return {\r\n        type: 'BY_POPULATION',\r\n        payload: population\r\n    }\r\n}\r\n\r\nexport function getByMorePop(population) {\r\n    return {\r\n        type: 'BY_MORE_POP',\r\n        payload: population\r\n    }\r\n}\r\n\r\nexport function getByActivity (activity) {\r\n    return {\r\n        type: 'BY_ACTIVITY',\r\n        payload: activity\r\n    }\r\n\r\n}\r\n\r\nexport function getActivity () {\r\n    return async (dispatch) => { \r\n        const dataDb = await axios(`${EP}/activities`);\r\n      \r\n        return dispatch ({\r\n            type: 'ALL_ACTIVITIES',\r\n            payload: dataDb.data\r\n        })\r\n    }\r\n}\r\n\r\nexport function postActivity (payload) {\r\n    return async (dispatch) => { \r\n        const response = await axios.post(`${EP}/activities`, payload);\r\n        return response\r\n    }\r\n}\r\n\r\n\r\nexport function getOrdered (value) {\r\n    return {\r\n        type: 'SORTED',\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function getName (name) {\r\n    return async (dispatch) => {\r\n        const dataDb = await axios(`${EP}/countries?name=` + name);\r\n        return dispatch({\r\n            type: 'COUNTRY_NAME',\r\n            payload: dataDb.data\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './countryCards.css'\r\nexport default function CountryCard(props) {\r\n  \r\n  return (\r\n    <div className='country_card'>\r\n      <img src={`${props.flags}`} alt={`Bandera de ${props.name}`}/>\r\n      <ul>\r\n        <li>Nombre: {props.name}</li>\r\n        <li>Contiente: {props.continent}</li>\r\n        <li>Habitantes: {props.population} </li>\r\n      </ul>\r\n      <Link to={`/country/${props.id}`}>\r\n                <button>Mas detalles</button>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './paginator.css'\r\n\r\nexport default function Paginator({ allCountries, paginator, nineCountries = 9, tenCountries}) {\r\n\r\n    const pages = []\r\n\r\n\r\n    for (let i = 1; i <= Math.ceil((((allCountries - nineCountries)/tenCountries)) + 1); i++) {\r\n        pages.push(i )\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <nav>\r\n            <ul className='paginator'>\r\n                {\r\n                    pages && pages.map(num => (\r\n                        <li className='num' value ={num} key={num} onClick={paginator}>\r\n                             {num}\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {getName} from '../../redux/actions/index.js'\r\nimport './searchBar.css'\r\n\r\nexport default function SearchBar() {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState(\"\")\r\n\r\n    function handleInput(e) {\r\n      e.preventDefault()\r\n      setName(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n      e.preventDefault()\r\n      dispatch(getName(name))\r\n    }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n        <input\r\n        onChange={handleInput}\r\n        type = 'text'\r\n        placeholder = 'Qué país querés ver?'\r\n        className='searchbar_input'\r\n        />\r\n        <button className='button-54' type = 'submit'>\r\n         Buscar\r\n        </button>\r\n    </form >\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {getAllCountries, getByContinent, getOrdered, getByPopulation, getByActivity, getActivity, getByMorePop} from '../../redux/actions/index.js'\r\nimport CountryCard from '../country/countryCard';\r\nimport Paginator from '../paginado/Paginator.jsx';\r\nimport SearchBar from '../SearchBar/searchBar.jsx';\r\nimport './countries.css'\r\n\r\n\r\nexport default function Countries () {\r\n    const continents = ['South America', 'Asia', 'Africa', 'Europe', 'Oceania', 'North America' ]\r\n\r\n\r\n    const dispatch = useDispatch()//acceso a dispatch function del store\r\n    const allCountries = useSelector((state) => state.countries); //ahora tengo acceso a un estado global(que viene del store) en este componente local\r\n    const allActivities = useSelector((state) => state.activities )\r\n    \r\n    const [page, setPage] = useState(1) //en qué pag estoy\r\n\r\n\r\n    const handleOrdered = (e) => {\r\n      dispatch(getOrdered(e.target.value))\r\n      setIndexFirstCountry(0)\r\n      setIndexLastCountry(nineCountries)\r\n\r\n    }\r\n\r\n    const handleContinent = (e) => {\r\n      setIndexFirstCountry(0)\r\n      setIndexLastCountry(nineCountries)\r\n\r\n      dispatch(getByContinent(e.target.value))\r\n    }\r\n\r\n    const handlePoblation = (e) => {\r\n      dispatch(getByPopulation(e.target.value))\r\n      setIndexFirstCountry(0)\r\n      setIndexLastCountry(nineCountries)\r\n\r\n    }\r\n\r\n    const handleByAct = (e) => {\r\n      dispatch(getByActivity(e.target.value))\r\n      setIndexFirstCountry(0)\r\n      setIndexLastCountry(nineCountries)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n      dispatch(getAllCountries())// este dispatch está aca por la razon de que queremos que se dispache al cargar el componente\r\n      \r\n      dispatch(getActivity())\r\n\r\n    },[dispatch])//asi  digo q se actualice 1 sola vez\r\n\r\n    const nineCountries = 9;//cant de paises en primera pag\r\n    const tenCountries = 10;//can de paises en el resto de las pags\r\n\r\n    const [indexFirstCountry, setIndexFirstCountry] = useState(0)\r\n    const [indexLastCountry, setIndexLastCountry] = useState(nineCountries)\r\n\r\n\r\n    const countriesAtPage = allCountries.slice(indexFirstCountry, indexLastCountry)//countrys a renderizar\r\n\r\n\r\n    const paginator = (e) => {\r\n      setPage(e.target.value)\r\n      setIndexFirstCountry(page === 1 ? 0: (tenCountries * (page - 1) - 1))\r\n      setIndexLastCountry(page === 1 ? nineCountries : ((tenCountries * (page))) - 1)\r\n    }\r\n\r\n\r\n    const handleButtonPop = () => {\r\n      dispatch(getByMorePop())\r\n      setIndexFirstCountry(0)\r\n      setIndexLastCountry(nineCountries)\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='countries_countainer'>\r\n        <div className='countries_title'>\r\n          <h1>Los paises</h1>\r\n        </div>\r\n        <div className='countries_paginator'>\r\n          <Paginator\r\n          allCountries={allCountries.length}\r\n           paginator = {paginator}\r\n          nineCountries = {nineCountries}\r\n          tenCountries = {tenCountries}\r\n          />\r\n        </div>\r\n          <SearchBar\r\n          />\r\n        <div className='countries_filters'>\r\n          <select onChange={handleOrdered}>\r\n            <option value='ascendente'>Orden Ascendente</option>\r\n            <option value='descendente'>Orden Descendente</option>\r\n          </select>\r\n          <select onChange={handleByAct}>\r\n            <option value='Todos'>Todos los paises</option>\r\n            {\r\n              allActivities?.map(act => {\r\n                return (\r\n                  <option value={act.name} key={act.id}>Con {act.name}</option>\r\n                )\r\n              })\r\n            }\r\n          </select>\r\n          <select onChange={handleContinent}>\r\n          \r\n             <option value='Todos'>Todos los Continentes</option>\r\n             {\r\n             continents.map(c => {\r\n              return (\r\n                <option key={c} value={c}>{c}</option>\r\n              )\r\n             })\r\n             }\r\n           \r\n          </select>\r\n          <select onChange={handlePoblation}>\r\n             <option value='Todos'>Ordenenado por población</option>\r\n             <option value='less_population'>Por menor población</option>\r\n             <option value='more_population'>Por mayor población</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <button onClick={handleButtonPop}>Paises con porblacion inmensa</button>\r\n        </div>\r\n        <div className='countries_cards'>\r\n          {countriesAtPage.map(({id, name, flags, continents, population})=> {\r\n              return <CountryCard\r\n              key = {id}\r\n              id = {id}\r\n              name = {name}\r\n              flags = {flags}\r\n              continent = {continents}\r\n              population = {population}\r\n              />\r\n          })\r\n          }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useParams } from 'react-router-dom';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {getById} from '../../redux/actions/index.js'\r\nimport './countryById.css'\r\n// eslint-disable-next-line\r\n\r\n\r\nexport default function CountryId() {\r\n    const dispatch = useDispatch()\r\n\r\n    const { id } = useParams()\r\n\r\n    \r\n    useEffect(()=> {\r\n        dispatch(getById(id))\r\n\r\n        return function detailCleaner() {\r\n          dispatch({type: 'CLEAN', payload: {}})\r\n\r\n        }\r\n    }, [dispatch, id])\r\n\r\n\r\n\r\n    const country = useSelector(state => state.countryDetail)\r\n\r\n  return (\r\n    <div className='detail_container'>\r\n        <h1>{country.name}</h1>\r\n        <img src={`${country.flags}`} alt={`Bandera de ${country.name}`}/>\r\n        <p>Código: {country.id}</p>\r\n        <p>Continente: {country.continents}</p>\r\n        <p>Capital: {country.capital}</p>\r\n        <p>Subregión: {country.subregion}</p>\r\n        <p>Área: {country.area}km²</p>\r\n        <p>Población: {country.population} habitantes</p>\r\n        <h3>Actividades:</h3>\r\n        <ul>\r\n          {\r\n            country.activities?.map(a => {\r\n              return (\r\n                <li key={a.id}>{a.name},Temporada: {a.season},Duración: {a.duration}, Dificultad: {a.difficulty} </li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {  getAllCountries, postActivity } from '../../redux/actions/index.js'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport './createAct.css'\r\n\r\n\r\n\r\nexport default function CreateActivity() {\r\n\r\n    const dispatch = useDispatch()\r\n    const countries = useSelector(state => state.countries)\r\n    //const activities = useSelector(state => state.activities)\r\n\r\n    const [errorButton, setErrorButton] = useState(true)\r\n    const [formErrors, setFormErrors] = useState({\r\n        name: '',\r\n        season: '',\r\n        difficulty: '',\r\n        duration:''\r\n    })\r\n    \r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        difficulty: \"\",\r\n        duration: \"\",\r\n        season: \"\",\r\n        countries: []\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        //dispatch(getActivity())\r\n        dispatch(getAllCountries())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n       \r\n    },[errorButton])\r\n\r\n    function handleChange(e) {\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        setFormErrors(validate(input))\r\n      \r\n        if(Object.keys(formErrors).length === 0) {\r\n          \r\n            setErrorButton(false)\r\n        }\r\n    }\r\n    function handleCountries(e) {\r\n        setInput({\r\n            ...input,\r\n            countries: [...input.countries, e.target.value]//concateno lo que hay en el arreglo y pusheo lo que selecciono\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        dispatch(postActivity(input))\r\n        alert('Actividad creada 🧗‍♀️')\r\n        setInput({\r\n            name: \"\",\r\n            difficulty: \"\",\r\n            duration: \"\",\r\n            season: \"\",\r\n            countries: []\r\n        })\r\n    }\r\n\r\n    function handeClean() {\r\n        setInput({\r\n            countries:[]\r\n        })\r\n    }\r\n\r\n    function validate(data) {\r\n        let errors = {}\r\n        if(validName(data.name)) errors.name = \"Ingresar 3 caracteres minimo\"\r\n        if(validSeason(data.season)) errors.season = \"Ingresa una temporada válida\"\r\n        if(validDuration(data.duration)) errors.duration = \"De 00hs a 24hs. Incluí el 'hs'\"\r\n        if(validDifficulty(data.difficulty)) errors.difficulty = \"Solo ingresar del 1 al 5\"\r\n        return errors\r\n    }\r\n\r\n    function validName(str) {\r\n        if (typeof str !== 'string') return true\r\n        if(str.length < 3) return true\r\n    }\r\n\r\n    function validSeason(str) {\r\n        if (typeof str !== 'string') return true\r\n     //   if (str !== 'Verano' || str !== 'Invierno' || str !== 'Otoño' || str !== 'Primavera') return true\r\n    }\r\n\r\n    function validDuration(str) {\r\n        if (typeof str !== 'string') return true\r\n    }\r\n\r\n    function validDifficulty(num) {\r\n      //  if (typeof num !== 'number') return true\r\n        if(num > 5 || num < 1) return true\r\n    }\r\n\r\n    // function validateCountries (num) {\r\n        \r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='create_section'>\r\n            <h1>Agregá una actividad</h1>\r\n            <form onSubmit={handleSubmit} className='form_container'>\r\n                <div>\r\n                    <label>Nombre de la actividad</label>\r\n                    <input\r\n                        type='text'\r\n                        value={input.name}\r\n                        name='name'\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        formErrors.name ? \r\n                        <span style={{color:\"red\"}}>{formErrors.name}</span> :\r\n                        false\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <label>Dificultad</label>\r\n                    <input\r\n                        type='number'\r\n                        value={input.difficulty}\r\n                        name='difficulty'\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    {\r\n                        formErrors.difficulty ? \r\n                        <span style={{color:\"red\"}}>{formErrors.difficulty}</span> :\r\n                        false\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <label>Duración</label>\r\n                    <input\r\n                        type='number'\r\n                        value={input.duration}\r\n                        name='duration'\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    hs\r\n                    {\r\n                        formErrors.duration ?\r\n                        <span style={{color:\"red\"}}>{formErrors.duration}</span> :\r\n                        false\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <label>Temporada</label>\r\n                    <select \r\n                        name='season'\r\n                        onChange={handleChange}\r\n                        required\r\n                        >\r\n                        <option value=\"-1\">Temporada</option>\r\n                        <option value=\"Verano\">Verano</option>\r\n                        <option value=\"Otoño\">Otoño</option>\r\n                        <option value=\"Invierno\">Invierno</option>\r\n                        <option value=\"Primavera\">Primavera</option>\r\n                        </select>\r\n                        {\r\n                        formErrors.season ? \r\n                        <span style={{color:\"red\"}}>{formErrors.season}</span> :\r\n                        false\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <label>Paises</label>\r\n                    <input\r\n                        type='text'\r\n                        value={input.countries}\r\n                        name='countries'\r\n                        onChange={handleChange}\r\n                        required\r\n                        disabled={true}\r\n                    />\r\n                </div>\r\n                <select name='countries' onChange={handleCountries}>\r\n                    {\r\n                        countries.map(c => {\r\n                            return (\r\n                                <option key={c.id} value={c.name}>{c.name}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n                <button type='button' onClick={handeClean}>Limpiar selección de paises</button>\r\n                <button type='submit' disabled={errorButton}>Crear</button>\r\n                <Link to='/countries'><button>Volver</button></Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './navbar.css'\r\n\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <div className='navbar'>\r\n        <Link to='/'>\r\n            <button>Home</button>\r\n        </Link>\r\n        <Link to='/countries'>\r\n            <button>Paises</button>\r\n        </Link>\r\n        <Link to='/activity'>\r\n            <button>Crear Actividad</button>\r\n        </Link>\r\n     \r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport  Home  from './components/home/home';\nimport  Countries  from './components/countries/countries.jsx'\nimport CountryId from './components/countryById/countryId';\nimport CreateActivity from './components/createActivity/createActivity';\nimport Navbar from './components/navbar/navbar';\n\n\n\n\nfunction App() {\n  return (\n    <>\n\n    \n\n    <Switch>\n      \n      <Route path=\"/\" exact>\n        <Home/>\n      </Route>\n      \n      <Route path=\"/countries\" exact>\n      <Navbar />\n        <Countries />\n      </Route>\n      \n      <Route path=\"/country/:id\">\n      <Navbar />\n        <CountryId />\n      </Route>\n      \n      <Route path=\"/activity\">\n      <Navbar />\n        <CreateActivity />\n      </Route>\n     \n    \n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport  store from './redux/store'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n      <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}